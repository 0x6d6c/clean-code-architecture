# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true     # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: true

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name

    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Model/'
            - '../src/Kernel.php'
            - '../src/Tests/'
            - '../src/Action/Input/'
            - '../src/Action/Output/'
            - '../src/Infrastructure/Exception'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    App\Model\Doctors:
        class: App\Infrastructure\Repository\DoctrineDoctors

    App\Infrastructure\ParamConverter\AddDoctorDTOParamConverter:
        arguments:
            - '@App\Infrastructure\RequestValidator\SymfonyObjectValidator'

    App\Infrastructure\ExceptionHandler\InvalidRequestExceptionHandler:
        tags:
            - {name: kernel.event_listener, event: kernel.exception}

    App\Infrastructure\Responder\JsonResponder:
        tags:
            - {name: kernel.event_listener, event: kernel.view}

    get_set_method_normalizer:
        class: Symfony\Component\Serializer\Normalizer\GetSetMethodNormalizer
        tags: [serializer.normalizer]
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
